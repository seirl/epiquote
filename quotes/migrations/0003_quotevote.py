# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-05 23:45
from __future__ import unicode_literals

from django.apps import apps as global_apps
from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def forwards(apps, schema_editor):
    try:
        OldVote = apps.get_model('voting', 'Vote')
    except LookupError:
        return

    QuoteVote = apps.get_model('quotes', 'QuoteVote')
    Quote = apps.get_model('quotes', 'Quote')

    new_quotes = []
    for old_vote in OldVote.objects.all():
        try:
            quote = Quote.objects.get(id=old_vote.object_id)
        except ObjectDoesNotExist:
            continue
        new_quotes.append(
            QuoteVote(vote=old_vote.vote,
                      quote=quote,
                      timestamp=old_vote.time_stamp,
                      user=old_vote.user))

    QuoteVote.objects.bulk_create(new_quotes)


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('quotes', '0002_fix_onetoone'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuoteVote',
            fields=[
                ('id', models.AutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID')),
                ('vote', models.SmallIntegerField(
                    choices=[(1, '+1'), (-1, '-1')])),
                ('timestamp', models.DateTimeField(
                    default=django.utils.timezone.now,
                    editable=False)),
                ('quote', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='votes',
                    to='quotes.Quote')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='quotevote',
            unique_together=set([('user', 'quote')]),
        ),
        migrations.RunPython(forwards, migrations.RunPython.noop),
    ]

    if global_apps.is_installed('voting'):
        dependencies.append(('voting', '0001_initial'))
